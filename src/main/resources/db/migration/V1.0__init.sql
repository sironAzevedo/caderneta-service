 /*
CREATE DATABASE caderneta;
CREATE SCHEMA SGCP;
CREATE SEQUENCE SGCP.USUARIO_ID_SEQ MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1;
CREATE SEQUENCE SGCP.MES_ID_SEQ MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1;
CREATE SEQUENCE SGCP.MES_SALARIO_ID_SEQ MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1;
CREATE SEQUENCE SGCP.STATUS_CONTA_ID_SEQ MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1;
CREATE SEQUENCE SGCP.TIPO_CONTA_ID_SEQ MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1;
CREATE SEQUENCE SGCP.CONTA_ID_SEQ MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1;
CREATE TYPE SGCP.ATIVO AS ENUM ('S', 'N');
*/

CREATE TABLE IF NOT EXISTS SGCP.TB_USUARIO
(
    ID BIGINT PRIMARY KEY NOT NULL DEFAULT nextval('SGCP.USUARIO_ID_SEQ'),
    NOME VARCHAR(255) NOT NULL,
    EMAIL VARCHAR(255) NOT NULL,
    SENHA VARCHAR(550) NOT NULL,
    FL_ATIVO SGCP.ATIVO NULL DEFAULT 'S',
    DT_CADASTRO DATE DEFAULT NOW(),
    DT_UPDATE DATE,
    UNIQUE(EMAIL)
);

CREATE TABLE IF NOT EXISTS SGCP.TB_ROLE
(
    ID VARCHAR (50) PRIMARY KEY NOT NULL
);

CREATE TABLE  IF NOT EXISTS SGCP.TB_USUARIO_ROLE
(
    ID_USUARIO BIGINT NOT NULL,
    ID_ROLE VARCHAR (50) NOT NULL,

    FOREIGN KEY (ID_USUARIO) REFERENCES SGCP.TB_USUARIO(ID),
    FOREIGN KEY (ID_ROLE) REFERENCES SGCP.TB_ROLE(ID)
);

CREATE TABLE IF NOT EXISTS SGCP.TB_MES
(
    ID BIGINT PRIMARY KEY NOT NULL DEFAULT nextval('SGCP.MES_ID_SEQ'),
    DESC_MES VARCHAR (255) NOT NULL
);

CREATE TABLE IF NOT EXISTS SGCP.TB_MES_SALARIO
(
    ID BIGINT PRIMARY KEY NOT NULL DEFAULT nextval('SGCP.MES_SALARIO_ID_SEQ'),
    SALARIO DECIMAL (10,2) NOT NULL DEFAULT NULL,
    ID_MES BIGINT NOT NULL,     
    DT_CADASTRO DATE DEFAULT NOW(),
    DT_UPDATE DATE,
    UNIQUE(ID_MES),
   
    FOREIGN KEY (ID_MES) REFERENCES SGCP.TB_MES(ID)
);

CREATE TABLE  IF NOT EXISTS SGCP.TB_USUARIO_SALARIO
(
    ID_USUARIO BIGINT NOT NULL,
    ID_SALARIO BIGINT NOT NULL,

    FOREIGN KEY (ID_USUARIO) REFERENCES SGCP.TB_USUARIO(ID),
    FOREIGN KEY (ID_SALARIO) REFERENCES SGCP.TB_MES_SALARIO(ID)
);

CREATE TABLE IF NOT EXISTS SGCP.TB_STATUS_CONTA
(
    ID BIGINT PRIMARY KEY NOT NULL DEFAULT nextval('SGCP.STATUS_CONTA_ID_SEQ'),
    DESCRICAO VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS SGCP.TB_TIPO_CONTA
(
    ID BIGINT PRIMARY KEY NOT NULL DEFAULT nextval('SGCP.TIPO_CONTA_ID_SEQ'),
    NOME_TIPO_CONTA VARCHAR(255),
    DESC_TIPO_CONTA VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS SGCP.TB_CONTA
(
    ID BIGINT PRIMARY KEY NOT NULL DEFAULT nextval('SGCP.CONTA_ID_SEQ'),
    VALOR_CONTA DECIMAL (10,2) NOT NULL,
    DT_VENCIMENTO DATE NOT NULL,
    DT_PAGAMENTO DATE,    
    QTD_PARCELAS BIGINT,
    COMENTARIO VARCHAR(500),
    ID_MES BIGINT NOT NULL,
    ID_STATUS_CONTA BIGINT NOT NULL,
    ID_TIPO_CONTA BIGINT NOT NULL,    
    DT_CADASTRO DATE DEFAULT NOW(),

    FOREIGN KEY (ID_MES) REFERENCES SGCP.TB_MES(ID),
    FOREIGN KEY (ID_STATUS_CONTA) REFERENCES SGCP.TB_STATUS_CONTA(ID),
    FOREIGN KEY (ID_TIPO_CONTA) REFERENCES SGCP.TB_TIPO_CONTA(ID)
);

CREATE TABLE  IF NOT EXISTS SGCP.TB_USUARIO_CONTA
(
    ID_USUARIO BIGINT NOT NULL,
    ID_CONTA BIGINT NOT NULL,

    FOREIGN KEY (ID_USUARIO) REFERENCES SGCP.TB_USUARIO(ID),
    FOREIGN KEY (ID_CONTA) REFERENCES SGCP.TB_CONTA(ID)
);

--Consulta Dashboard
CREATE OR REPLACE VIEW SGCP.ALL_USER_ACCOUNTS AS
	SELECT
		m.id as MES_ID, 
		m.desc_mes as MES,
		Extract('Year' From c.dt_cadastro) as ANO,
		COALESCE(s.salario, 0) as SALARIO, 
		count(c.id) as QTD_CONTAS,
		COALESCE(SUM(c.valor_conta), 0) as TOTAL_GASTOS,		
		CASE
			WHEN COALESCE(s.salario, 0) = 0 THEN COALESCE(s.salario, 0)
			WHEN COALESCE(s.salario, 0) > 0 THEN COALESCE(( s.salario - SUM(c.valor_conta) ), 0)			 
		END
		AS SALDO_FINAL,
		u.id as USUARIO
	FROM SGCP.TB_MES m
	INNER JOIN SGCP.TB_CONTA c
	ON c.id_mes = m.id	
	LEFT JOIN SGCP.TB_MES_SALARIO s
	ON s.id_mes = m.id	
	INNER JOIN SGCP.TB_USUARIO_CONTA uc
	ON c.id = uc.id_conta
	INNER JOIN SGCP.TB_USUARIO u
	ON u.id = uc.id_usuario
	GROUP BY MES_ID, SALARIO, ANO, USUARIO
	ORDER BY ANO, MES_ID;
	
